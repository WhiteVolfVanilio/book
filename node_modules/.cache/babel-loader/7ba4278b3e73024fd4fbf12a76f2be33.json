{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\IvanO\\\\Desktop\\\\\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B\\\\react\\\\todo\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport ToDo from './ToDo';\nimport ToDoForm from './ToDoForm';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTask = (userInput, userInput1) => {\n    if (userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substr(2, 9),\n        task: userInput,\n        Author: userInput1,\n        complete: false\n      };\n      setTodos([...todos, newItem]);\n    }\n  };\n\n  const removeTask = id => {\n    setTodos([...todos.filter(todo => todo.id !== id)]);\n  };\n\n  const handleToggle = id => {\n    setTodos([...todos.map(todo => todo.id === id ? { ...todo,\n      complete: !todo.complete\n    } : { ...todo\n    })]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0437\\u0430\\u0434\\u0430\\u0447: \", todos.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(ToDo, {\n        todo: todo,\n        removeTask: removeTask\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/IvanO/Desktop/проекты/react/todo/src/App.js"],"names":["useState","ToDo","ToDoForm","App","todos","setTodos","addTask","userInput","userInput1","newItem","id","Math","random","toString","substr","task","Author","complete","removeTask","filter","todo","handleToggle","map","length"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAG,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AACzC,QAAGD,SAAH,EAAc;AACZ,YAAME,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAoC,CAApC,CADU;AAEdC,QAAAA,IAAI,EAAER,SAFQ;AAGdS,QAAAA,MAAM,EAAER,UAHM;AAIdS,QAAAA,QAAQ,EAAE;AAJI,OAAhB;AAMAZ,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,OAAX,CAAD,CAAR;AACD;AACF,GAVD;;AAYA,QAAMS,UAAU,GAAIR,EAAD,IAAQ;AACzBL,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAACe,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAnC,CAAJ,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMW,YAAY,GAAIX,EAAD,IAAQ;AAC3BL,IAAAA,QAAQ,CAAC,CACP,GAAGD,KAAK,CAACkB,GAAN,CAAWF,IAAD,IACXA,IAAI,CAACV,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGU,IAAL;AAAWH,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AAA3B,KAAjB,GAAyD,EAAC,GAAGG;AAAJ,KADxD,CADI,CAAD,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,6BACE;AAAA,4FAAmBhB,KAAK,CAACmB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEjB;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGF,KAAK,CAACkB,GAAN,CAAWF,IAAD,IAAU;AACnB,0BACE,QAAC,IAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAGE,QAAA,UAAU,EAAEF;AAHd,SAEOE,IAAI,CAACV,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CQP,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport ToDo from './ToDo'\nimport ToDoForm from './ToDoForm'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n\n  const addTask = (userInput, userInput1) => {\n    if(userInput) {\n      const newItem = {\n        id: Math.random().toString(36).substr(2,9),\n        task: userInput,\n        Author: userInput1,\n        complete: false\n      }\n      setTodos([...todos, newItem])\n    }\n  }\n\n  const removeTask = (id) => {\n    setTodos([...todos.filter((todo) => todo.id !== id)])\n  }\n\n  const handleToggle = (id) => {\n    setTodos([\n      ...todos.map((todo) => \n        todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }\n      )\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Список задач: {todos.length}</h1>\n      </header>\n      <ToDoForm addTask={addTask} />\n      {todos.map((todo) => {\n        return (\n          <ToDo\n            todo={todo}\n            key={todo.id}\n            removeTask={removeTask}\n            />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}