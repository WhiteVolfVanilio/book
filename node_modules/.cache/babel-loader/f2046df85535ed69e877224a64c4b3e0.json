{"ast":null,"code":"import _slicedToArray from\"C:/Users/IvanO/Desktop/\\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/react/todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";function getStorageValue(key,defaultValue){// getting stored value\nvar saved=localStorage.getItem(key);var initial=JSON.parse(saved);return initial||defaultValue;}export var useLocalStorage=function useLocalStorage(key,defaultValue){var _useState=useState(function(){return getStorageValue(key,defaultValue);}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){// storing input name\nlocalStorage.setItem(key,JSON.stringify(value));},[key,value]);return[value,setValue];};","map":{"version":3,"sources":["C:/Users/IvanO/Desktop/проекты/react/todo/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","getStorageValue","key","defaultValue","saved","localStorage","getItem","initial","JSON","parse","useLocalStorage","value","setValue","setItem","stringify"],"mappings":"mMAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,QAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8BC,YAA9B,CAA4C,CAC1C;AACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAd,CACA,GAAMK,CAAAA,OAAO,CAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAhB,CACA,MAAOG,CAAAA,OAAO,EAAIJ,YAAlB,CACD,CAED,MAAO,IAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACR,GAAD,CAAMC,YAAN,CAAuB,eAC1BJ,QAAQ,CAAC,UAAM,CACvC,MAAOE,CAAAA,eAAe,CAACC,GAAD,CAAMC,YAAN,CAAtB,CACD,CAFiC,CADkB,wCAC7CQ,KAD6C,eACtCC,QADsC,eAKpDZ,SAAS,CAAC,UAAM,CACd;AACAK,YAAY,CAACQ,OAAb,CAAqBX,GAArB,CAA0BM,IAAI,CAACM,SAAL,CAAeH,KAAf,CAA1B,EACD,CAHQ,CAGN,CAACT,GAAD,CAAMS,KAAN,CAHM,CAAT,CAKA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAP,CACD,CAXM","sourcesContent":["import { useState, useEffect } from \"react\";\r\n \r\nfunction getStorageValue(key, defaultValue) {\r\n  // getting stored value\r\n  const saved = localStorage.getItem(key);\r\n  const initial = JSON.parse(saved);\r\n  return initial || defaultValue;\r\n}\r\n \r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n \r\n  useEffect(() => {\r\n    // storing input name\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n \r\n  return [value, setValue];\r\n};"]},"metadata":{},"sourceType":"module"}