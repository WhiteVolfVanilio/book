{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction getStorageValue(key, defaultValue) {\n  // getting stored value\n  const saved = localStorage.getItem(key);\n  const initial = JSON.parse(saved);\n  return initial || defaultValue;\n}\n\nexport const useLocalStorage = (key, defaultValue) => {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    return getStorageValue(key, defaultValue);\n  });\n  useEffect(() => {\n    // storing input name\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n};\n\n_s(useLocalStorage, \"31he8u1ljGXqW3bOh+TpvhIaDCY=\");","map":{"version":3,"sources":["C:/Users/IvanO/Desktop/проекты/react/todo/src/hooks/useLocalStorage.js"],"names":["useState","useEffect","getStorageValue","key","defaultValue","saved","localStorage","getItem","initial","JSON","parse","useLocalStorage","value","setValue","setItem","stringify"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAC1C;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBJ,GAArB,CAAd;AACA,QAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAhB;AACA,SAAOG,OAAO,IAAIJ,YAAlB;AACD;;AAED,OAAO,MAAMO,eAAe,GAAG,CAACR,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AACpD,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,MAAM;AACvC,WAAOE,eAAe,CAACC,GAAD,EAAMC,YAAN,CAAtB;AACD,GAFiC,CAAlC;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,YAAY,CAACQ,OAAb,CAAqBX,GAArB,EAA0BM,IAAI,CAACM,SAAL,CAAeH,KAAf,CAA1B;AACD,GAHQ,EAGN,CAACT,GAAD,EAAMS,KAAN,CAHM,CAAT;AAKA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD,CAXM;;GAAMF,e","sourcesContent":["import { useState, useEffect } from \"react\";\r\n \r\nfunction getStorageValue(key, defaultValue) {\r\n  // getting stored value\r\n  const saved = localStorage.getItem(key);\r\n  const initial = JSON.parse(saved);\r\n  return initial || defaultValue;\r\n}\r\n \r\nexport const useLocalStorage = (key, defaultValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    return getStorageValue(key, defaultValue);\r\n  });\r\n \r\n  useEffect(() => {\r\n    // storing input name\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n \r\n  return [value, setValue];\r\n};"]},"metadata":{},"sourceType":"module"}